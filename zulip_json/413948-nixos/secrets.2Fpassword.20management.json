[
    {
        "content": "<p>I am having a tough time choosing a secrets/password manager. If I want to manage secrets, something like <a href=\"https://github.com/Mic92/sops-nix\">sops</a> or <a href=\"https://github.com/ryantm/agenix\">age</a> or <a href=\"https://github.com/AGWA/git-crypt\">git-crypt</a> should work well, but I am not super happy using it as I want a solution that works out to be both my password manager (on mobile and browser) and secrets manager. </p>\n<p>I spent quite some time researching for the ideal tool, came across <a href=\"https://github.com/hashicorp/vault\">hashicorp vault</a>, <a href=\"https://bitwarden.com/products/secrets-manager/\">bitwarden secrets manager</a> (this works out well as I already self-host vaultwarden, but unlike the password manager, this is proprietary).  To be honest, all these solutions seem bloated to me.</p>\n<p>Password/secrets management should not be this hard, and today I came across this simple tool that helps manage passwords with minimal dependencies: <a href=\"https://git.zx2c4.com/password-store/about/\">https://git.zx2c4.com/password-store/about/</a>. There is a problem though, for every new machine that I deploy, I will have to setup the GPG keys for the first time. I know gpg-agent exists, but if  it has to get authorised to decrypt from a central server, you will again need ssh agent forwarding for this. </p>\n<p>I don’t think I am ready to maintain another GPG key now, I would like to just use my SSH key to encrypt the password/secrets file in git tracked repo and the hosts I deploy on can use ssh-agent to be authorised to decrypt these files on startup and place them in files with proper user and group permissions. And I am sure using user and group permissions, we can achieve secrets management for large organisations, where different subset of users have permissions to access different keys.</p>\n<p>I am trying to solve the following problems with a simple secrets/password manager:</p>\n<ul>\n<li>SSH key to encrypt/decrypt the secrets/password</li>\n<li>use ssh-agent to authorise any device that would like to decrypt the secrets: We already know SSH protocol is secure, why not then use it instead of using something like mTLS that most password managers use to securely transfer the password.</li>\n<li>configure user/group permissions to the secrets/password file.</li>\n</ul>",
        "id": 427139745,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710687635
    },
    {
        "content": "<p>There might be flaws in the idea, so I would like some feedback.</p>\n<p>Also, I will be using this topic to keep track of my progress.</p>",
        "id": 427140154,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710687736
    },
    {
        "content": "<p>If I am going in the right direction, I would like to spend some time over weekends trying to build the tool that satisfies the points above</p>",
        "id": 427140488,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710687833
    },
    {
        "content": "<p>Looks like an interesting project indeed, I may consider using it even.</p>\n<p>Are you looking to design something that is cross-platform (eg: on nix-darwin) or just NixOS?</p>",
        "id": 427145331,
        "sender_full_name": "Srid",
        "timestamp": 1710689080
    },
    {
        "content": "<p>cross-platform, yes!</p>",
        "id": 427146757,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710689430
    },
    {
        "content": "<p>Also in the future maybe re-use existing clients of <a href=\"https://www.passwordstore.org/\">password-store</a> to also build <a href=\"https://github.com/android-password-store/Android-Password-Store#readme\">android</a>, <a href=\"https://mssun.github.io/passforios/\">IoS</a> and <a href=\"https://qtpass.org/\">desktop</a> clients to completely replace even bitwarden/vaultwarden. Perhaps I could just use dioxus to build these clients?</p>",
        "id": 427147775,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710689701
    },
    {
        "content": "<p>I have used <code>pass</code> in the past. <a href=\"https://srid.ca/pass\">https://srid.ca/pass</a></p>\n<p>But <a href=\"https://github.com/serokell/vault-secrets\">https://github.com/serokell/vault-secrets</a> looks interesting, I may play with it via <a href=\"https://github.com/1Password/vault-plugin-secrets-onepassword\">https://github.com/1Password/vault-plugin-secrets-onepassword</a> since I already use 1Password.</p>",
        "id": 427148000,
        "sender_full_name": "Srid",
        "timestamp": 1710689759
    },
    {
        "content": "<p><a href=\"https://github.com/serokell/vault-secrets\">https://github.com/serokell/vault-secrets</a> also came up while I was looking, but again its tied to an <a href=\"https://github.com/hashicorp/vault\">organisation</a>, they might end up doing something like bitwarden did with bitwarden secrets manager, which is fine if you think about the business aspects. And also vault is only for secrets.</p>\n<p>I just think that this problem should be solved effectively in the simplest way possible and be fully open.</p>",
        "id": 427150848,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710690512
    },
    {
        "content": "<p>Another thing I don’t like about hashicorp vault is that their tutorial is completely focused on specific cloud providers, which I understand is because of how the industry functions, but I would have liked if they had tutorials for native setup and configuration.</p>",
        "id": 427150883,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1710690520
    },
    {
        "content": "<p>I still use pass for account passwords at least, and currently rely on colmena to place secrets completely outside of nox evaluation. Mostly from one of my few pass repos.</p>\n<p>Although it's still not super ideal, it's good enough not to bother with it for me ATM. I have thought about this problem for a while though. At work we used to use vault to distribute secrets throughout the cluster but it's a bit overkill for my little lab network I think</p>",
        "id": 427239453,
        "sender_full_name": "Tim DeHerrera",
        "timestamp": 1710714223
    },
    {
        "content": "<h2>agenix</h2>\n<p>Surprised to see this never came up. Better than sops-nix in some respects (nix-darwin support; direct use of SSH keys and very simple).</p>\n<p>There's also a Rust variant: <a href=\"https://github.com/yaxitech/ragenix\">https://github.com/yaxitech/ragenix</a></p>",
        "id": 445622881,
        "sender_full_name": "Srid",
        "timestamp": 1718809784
    },
    {
        "content": "<p>I mean yeah, if you go with age as a backend anyways, it's a decent alternative to sops-nix I guess.</p>",
        "id": 445664991,
        "sender_full_name": "Andreas",
        "timestamp": 1718818262
    },
    {
        "content": "<p>Actually, may I suggest Secrix <a href=\"https://github.com/Platonic-Systems/secrix\">https://github.com/Platonic-Systems/secrix</a></p>\n<p>It's a home-brew solution made by a college of mine, usage is amazingly clear in my opinon:<br>\nHere is an example of me using it for NextCloud.</p>\n<p><a href=\"https://github.com/DarthPJB/NixOS-Configuration/blob/4595f79f7b771c14ea1c43e16b5d179a6ddd4c32/server_services/nextcloud.nix#L7\">https://github.com/DarthPJB/NixOS-Configuration/blob/4595f79f7b771c14ea1c43e16b5d179a6ddd4c32/server_services/nextcloud.nix#L7</a></p>",
        "id": 449452602,
        "sender_full_name": "John Bargman",
        "timestamp": 1720250551
    },
    {
        "content": "<p>interesting, so many more solutions <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 449460166,
        "sender_full_name": "Andreas",
        "timestamp": 1720254735
    },
    {
        "content": "<p>what's the advantage over agenix over sops-nix?</p>",
        "id": 449460182,
        "sender_full_name": "Andreas",
        "timestamp": 1720254756
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"670561\">John Bargman</span> <a href=\"#narrow/stream/413948-nixos/topic/secrets.2Fpassword.20management/near/449452602\">said</a>:</p>\n<blockquote>\n<p>may I suggest Secrix</p>\n</blockquote>\n<p>Does it work on macOS?</p>",
        "id": 449511469,
        "sender_full_name": "Srid",
        "timestamp": 1720279620
    },
    {
        "content": "<blockquote>\n<p>All secrets are stored in virtual memory and do not end up on disk.</p>\n</blockquote>\n<p>What do you do after a reboot? Re-deploy (<code>nixos-rebuild switch</code>)?</p>",
        "id": 449511664,
        "sender_full_name": "Srid",
        "timestamp": 1720279709
    }
]