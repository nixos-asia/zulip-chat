[
    {
        "content": "<p>Haven’t used pkgconfig-depends before, doesn’t using extra-libraries work?</p>",
        "id": 484907946,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1732796158
    },
    {
        "content": "<p>here’s an example cabal and nix configuration respectively, might be helpful:<br>\n<a href=\"https://github.com/juspay/superposition/blob/5b8410ea776a1758309b927ff2ab8b5370774431/clients/haskell/hs-exp-client/hs-exp-client.cabal#L114-L115\">https://github.com/juspay/superposition/blob/5b8410ea776a1758309b927ff2ab8b5370774431/clients/haskell/hs-exp-client/hs-exp-client.cabal#L114-L115</a><br>\n<a href=\"https://github.com/juspay/superposition/blob/5b8410ea776a1758309b927ff2ab8b5370774431/clients/haskell/default.nix#L8\">https://github.com/juspay/superposition/blob/5b8410ea776a1758309b927ff2ab8b5370774431/clients/haskell/default.nix#L8</a></p>",
        "id": 484908483,
        "sender_full_name": "Shivaraj B H",
        "timestamp": 1732796346
    },
    {
        "content": "<p>yeah  just adding<code>libavcodec.custom = _: pkgs.ffmpeg.lib;</code> to <code>settings</code> worked</p>",
        "id": 484910479,
        "sender_full_name": "Perigord",
        "timestamp": 1732797013
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"783564\">Perigord</span> has marked this topic as resolved.</p>",
        "id": 484910493,
        "sender_full_name": "Notification Bot",
        "timestamp": 1732797018
    },
    {
        "content": "<p>Hello cool nix people : )</p>\n<p>I'm trying to use a non-haskell dependency and failing. To make it simpler I'm using <code>pkgs.cowsay</code> as the executable I want to run on my haskell code with:</p>\n<div class=\"codehilite\" data-code-language=\"Haskell\"><pre><span></span><code><span class=\"nf\">cowsay</span><span class=\"w\"> </span><span class=\"ow\">::</span><span class=\"w\"> </span><span class=\"kt\">IO</span><span class=\"w\"> </span><span class=\"kt\">String</span>\n<span class=\"nf\">cowsay</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kr\">do</span>\n<span class=\"w\">  </span><span class=\"p\">(</span><span class=\"kr\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">mhout</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">_</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"kr\">_</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"ow\">&lt;-</span><span class=\"w\"> </span><span class=\"n\">createProcess</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">shell</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"s\">\"cowsay hola\"</span><span class=\"p\">))</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"> </span><span class=\"n\">std_out</span><span class=\"w\"> </span><span class=\"ow\">=</span><span class=\"w\"> </span><span class=\"kt\">CreatePipe</span><span class=\"w\"> </span><span class=\"p\">}</span>\n<span class=\"w\">  </span><span class=\"kr\">case</span><span class=\"w\"> </span><span class=\"n\">mhout</span><span class=\"w\"> </span><span class=\"kr\">of</span>\n<span class=\"w\">    </span><span class=\"kt\">Just</span><span class=\"w\"> </span><span class=\"n\">hout</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">hGetContents</span><span class=\"w\"> </span><span class=\"n\">hout</span>\n<span class=\"w\">    </span><span class=\"kt\">Nothing</span><span class=\"w\"> </span><span class=\"ow\">-&gt;</span><span class=\"w\"> </span><span class=\"n\">pure</span><span class=\"w\"> </span><span class=\"s\">\"mhout failed\"</span>\n</code></pre></div>\n<p>I've added to the corresponding cabal executable stanza <code>build-tools:  cowsay</code> (also tried with <code>extra-libraries</code> but that just complained of not being a good C library)</p>\n<p>This is my whole flake:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"ss\">inputs</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    nixpkgs<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:nixos/nixpkgs\"</span><span class=\"p\">;</span>\n    flake-parts<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:hercules-ci/flake-parts\"</span><span class=\"p\">;</span>\n    haskell-flake<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:srid/haskell-flake\"</span><span class=\"p\">;</span>\n    hvm<span class=\"o\">.</span><span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:hhefesto/HVM\"</span><span class=\"p\">;</span>\n    <span class=\"ss\">flake-compat</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n      <span class=\"ss\">url</span> <span class=\"o\">=</span> <span class=\"s2\">\"github:edolstra/flake-compat\"</span><span class=\"p\">;</span>\n      <span class=\"ss\">flake</span> <span class=\"o\">=</span> <span class=\"no\">false</span><span class=\"p\">;</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n\n  <span class=\"ss\">outputs</span> <span class=\"o\">=</span> inputs<span class=\"p\">@{</span> self<span class=\"p\">,</span> nixpkgs<span class=\"p\">,</span> flake-compat<span class=\"p\">,</span> hvm<span class=\"p\">,</span> flake-parts<span class=\"p\">,</span> haskell-flake<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span>\n    flake-parts<span class=\"o\">.</span>lib<span class=\"o\">.</span>mkFlake <span class=\"p\">{</span> <span class=\"k\">inherit</span> inputs<span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"p\">{</span>\n      <span class=\"ss\">systems</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s2\">\"x86_64-linux\"</span> <span class=\"s2\">\"aarch64-linux\"</span> <span class=\"p\">];</span>\n      <span class=\"ss\">imports</span> <span class=\"o\">=</span> <span class=\"p\">[</span> inputs<span class=\"o\">.</span>haskell-flake<span class=\"o\">.</span>flakeModule <span class=\"p\">];</span>\n      <span class=\"ss\">perSystem</span> <span class=\"o\">=</span> <span class=\"p\">{</span> self'<span class=\"p\">,</span> system<span class=\"p\">,</span> pkgs<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span> <span class=\"p\">{</span>\n        haskellProjects<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n          <span class=\"ss\">basePackages</span> <span class=\"o\">=</span> pkgs<span class=\"o\">.</span>haskell<span class=\"o\">.</span>packages<span class=\"o\">.</span>ghc92<span class=\"p\">;</span>\n          <span class=\"ss\">settings</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            cowsay<span class=\"o\">.</span><span class=\"ss\">custom</span> <span class=\"o\">=</span> _<span class=\"p\">:</span> pkgs<span class=\"o\">.</span>cowsay<span class=\"p\">;</span>\n            <span class=\"ss\">telomare</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n              <span class=\"ss\">extraBuildDepends</span> <span class=\"o\">=</span> <span class=\"p\">[</span> pkgs<span class=\"o\">.</span>cowsay\n                                  <span class=\"p\">];</span>\n            <span class=\"p\">};</span>\n          <span class=\"p\">};</span>\n          <span class=\"ss\">devShell</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"ss\">enable</span> <span class=\"o\">=</span> <span class=\"no\">true</span><span class=\"p\">;</span>\n          <span class=\"p\">};</span>\n      <span class=\"p\">};</span>\n      packages<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> self'<span class=\"o\">.</span>packages<span class=\"o\">.</span>telomare<span class=\"p\">;</span>\n      apps<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">type</span> <span class=\"o\">=</span> <span class=\"s2\">\"app\"</span><span class=\"p\">;</span>\n        <span class=\"ss\">program</span> <span class=\"o\">=</span> self<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>system<span class=\"si\">}</span><span class=\"o\">.</span>telomare <span class=\"o\">+</span> <span class=\"s2\">\"/bin/telomare\"</span><span class=\"p\">;</span>\n      <span class=\"p\">};</span>\n\n      apps<span class=\"o\">.</span><span class=\"ss\">repl</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">type</span> <span class=\"o\">=</span> <span class=\"s2\">\"app\"</span><span class=\"p\">;</span>\n        <span class=\"ss\">program</span> <span class=\"o\">=</span> self<span class=\"o\">.</span>packages<span class=\"o\">.</span><span class=\"si\">${</span>system<span class=\"si\">}</span><span class=\"o\">.</span>telomare <span class=\"o\">+</span> <span class=\"s2\">\"/bin/telomare-repl\"</span><span class=\"p\">;</span>\n      <span class=\"p\">};</span>\n    <span class=\"p\">};</span>\n  <span class=\"p\">};</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>n.b. in <code>settings</code> I've added <code>cowsay.custom = _: pkgs.cowsay;</code> and also tried<code>settings.telomare.extraBuildDepends = [ pkgs.cowsay ];</code> </p>\n<p>To test it you just have to <code>nix run .</code> for the <code>flake-parts</code> branch in <a href=\"https://github.com/hhefesto/stand-in-language/tree/flake-parts\">https://github.com/hhefesto/stand-in-language/tree/flake-parts</a></p>\n<p>Am I doing something wrong?</p>",
        "id": 492102909,
        "sender_full_name": "Daniel Herrera Rendón",
        "timestamp": 1736169372
    },
    {
        "content": "<p>Forgot to add the error:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ nix run .\n/bin/sh: line 1: cowsay: command not found\n</code></pre></div>",
        "id": 492104382,
        "sender_full_name": "Daniel Herrera Rendón",
        "timestamp": 1736169957
    }
]