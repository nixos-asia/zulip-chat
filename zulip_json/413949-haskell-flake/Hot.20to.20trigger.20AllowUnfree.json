[
    {
        "content": "<p>Hello, kind nix people : )</p>\n<p>I have a package of a multi package project that uses an unfree license and I get this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>❯ nix build -Lv\nwarning: Git tree &#39;/home/hhefesto/src/Tontine/robo-actuary&#39; is dirty\nerror:\n       … while calling the &#39;derivationStrict&#39; builtin\n         at &lt;nix/derivation-internal.nix&gt;:37:12:\n           36|\n           37|   strict = derivationStrict drvAttrs;\n             |            ^\n           38|\n\n       … while evaluating derivation &#39;user-account-service-0.1.0.0&#39;\n         whose name attribute is located at /nix/store/qmm7hgw60vp7vj9lma95hl329d0j3n6n-source/pkgs/stdenv/generic/make-derivation.nix:438:13\n\n       … while evaluating attribute &#39;buildInputs&#39; of derivation &#39;user-account-service-0.1.0.0&#39;\n         at /nix/store/qmm7hgw60vp7vj9lma95hl329d0j3n6n-source/pkgs/stdenv/generic/make-derivation.nix:493:13:\n          492|             depsHostHost = elemAt (elemAt dependencies 1) 0;\n          493|             buildInputs = elemAt (elemAt dependencies 1) 1;\n             |             ^\n          494|             depsTargetTarget = elemAt (elemAt dependencies 2) 0;\n\n       (stack trace truncated; use &#39;--show-trace&#39; to show the full, detailed trace)\n\n       error: Package ‘tt-common-0.1.0.0’ in /nix/store/zdxbv7why72l2plp920vgxviinawgw02-cabal2nix-tt-common/default.nix:21 has an unfree license (‘unfree’), refusing to evaluate.\n\n       a) To temporarily allow unfree packages, you can use an environment variable\n          for a single invocation of the nix tools.\n\n            $ export NIXPKGS_ALLOW_UNFREE=1\n\n          Note: When using `nix shell`, `nix build`, `nix develop`, etc with a flake,\n                then pass `--impure` in order to allow use of environment variables.\n\n       b) For `nixos-rebuild` you can set\n         { nixpkgs.config.allowUnfree = true; }\n       in configuration.nix to override this.\n\n       Alternatively you can configure a predicate to allow specific packages:\n         { nixpkgs.config.allowUnfreePredicate = pkg: builtins.elem (lib.getName pkg) [\n             &quot;tt-common&quot;\n           ];\n         }\n\n       c) For `nix-env`, `nix-build`, `nix-shell` or any other Nix command you can add\n         { allowUnfree = true; }\n       to ~/.config/nixpkgs/config.nix.\n</code></pre></div>\n<p>In my flake I've tried to set allowUnfree to true like this without success:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code>  <span class=\"ss\">outputs</span> <span class=\"o\">=</span> inputs<span class=\"p\">@{</span> self<span class=\"p\">,</span> nixpkgs<span class=\"p\">,</span> flake-parts<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span>\n    flake-parts<span class=\"o\">.</span>lib<span class=\"o\">.</span>mkFlake <span class=\"p\">{</span> <span class=\"k\">inherit</span> inputs<span class=\"p\">;</span> <span class=\"p\">}</span> <span class=\"p\">{</span>\n      <span class=\"ss\">systems</span> <span class=\"o\">=</span> nixpkgs<span class=\"o\">.</span>lib<span class=\"o\">.</span>systems<span class=\"o\">.</span>flakeExposed<span class=\"p\">;</span>\n      <span class=\"ss\">imports</span> <span class=\"o\">=</span> <span class=\"p\">[</span> inputs<span class=\"o\">.</span>haskell-flake<span class=\"o\">.</span>flakeModule <span class=\"p\">];</span>\n\n      <span class=\"ss\">perSystem</span> <span class=\"o\">=</span> <span class=\"p\">{</span> self'<span class=\"p\">,</span> system<span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}:</span>\n      <span class=\"k\">let</span>\n        <span class=\"ss\">pkgs</span> <span class=\"o\">=</span> <span class=\"nb\">import</span> nixpkgs <span class=\"p\">{</span>\n          <span class=\"k\">inherit</span> system<span class=\"p\">;</span>\n          <span class=\"ss\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"ss\">allowUnfree</span> <span class=\"o\">=</span> <span class=\"no\">true</span><span class=\"p\">;</span>\n            <span class=\"ss\">allowUnfreePredicate</span> <span class=\"o\">=</span> pkg<span class=\"p\">:</span> <span class=\"nb\">builtins</span><span class=\"o\">.</span>elem <span class=\"p\">(</span>pkgs<span class=\"o\">.</span>lib<span class=\"o\">.</span>getName pkg<span class=\"p\">)</span> <span class=\"p\">[</span>\n             <span class=\"s2\">\"tt-common\"</span>\n            <span class=\"p\">];</span>\n            <span class=\"ss\">permittedInsecurePackages</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n              <span class=\"s2\">\"beekeeper-studio-5.1.5\"</span>\n            <span class=\"p\">];</span>\n          <span class=\"p\">};</span>\n        <span class=\"p\">};</span>\n      <span class=\"k\">in</span> <span class=\"p\">{</span>\n\n        haskellProjects<span class=\"o\">.</span><span class=\"ss\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"o\">...</span>\n</code></pre></div>\n<p>How can I achieve this?</p>",
        "id": 516000560,
        "sender_full_name": "Daniel Herrera Rendón",
        "timestamp": 1746341986
    },
    {
        "content": "<p>You want _module.args: <a href=\"https://github.com/search?q=repo%3Anammayatri%2Fcommon%20_module.args&amp;type=code\">https://github.com/search?q=repo%3Anammayatri%2Fcommon%20_module.args&amp;type=code</a></p>",
        "id": 516004881,
        "sender_full_name": "Srid",
        "timestamp": 1746345600
    },
    {
        "content": "<p>That worked! Thank you, <span class=\"user-mention\" data-user-id=\"667408\">@Srid</span> !</p>\n<p>Is there any resources to read up on how <code>_module</code> works? What's the sort of things that should be set there?</p>",
        "id": 516108824,
        "sender_full_name": "Daniel Herrera Rendón",
        "timestamp": 1746421812
    },
    {
        "content": "<p>Perhaps this may help: <a href=\"https://flake.parts/overlays.html#consuming-an-overlay\">https://flake.parts/overlays.html#consuming-an-overlay</a></p>\n<p>It comes from flake-parts</p>",
        "id": 516110161,
        "sender_full_name": "Srid",
        "timestamp": 1746422727
    }
]