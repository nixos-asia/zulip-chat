[
    {
        "content": "<p>Currently in Cab, there are only 3 keywords that aren't defined as infix/postfix operators: <code>if</code>, <code>then</code> and <code>else</code>. (and <code>and</code>, <code>or</code> which are infix, <code>not</code> which is a prefix opetator, just like <code>-</code>)</p>\n<p>I believe a this doesn't fit the language because there are no other \"special cased\" keywords. I want to change their behavior, also removing the <code>if</code> keyword in the process of redesigning this approach. The new syntax for \"if else\" will be:</p>\n<div class=\"codehilite\" data-code-language=\"Nix\"><pre><span></span><code>cond <span class=\"k\">then</span> y <span class=\"k\">else</span> n\n</code></pre></div>\n<ul>\n<li>\n<p>The <code>then</code> operator works like this: <code>cond then y</code></p>\n<ul>\n<li>If <code>cond</code> is false, it evaluates to <code>undefined</code>, if it isn't, it simply evaluates to <code>y</code></li>\n</ul>\n</li>\n<li>\n<p>The <code>else</code> operator works like this: <code>maybeUndefined else n</code></p>\n<ul>\n<li>If <code>maybeUndefined</code> is undefined, it simply evaluates to <code>n</code>. If not, it evaluates to <code>maybeUndefined</code></li>\n</ul>\n</li>\n</ul>\n<p><code>then</code> has higher binding power, so you can chain <code>then</code> and <code>else</code>.</p>\n<p>Another benefit of this is that you will be able to do <code>setThatDoesNotHaveFoo.foo else \"foo didn't exist\"</code> without special casing (like the <code>or</code> in Nix), as <code>.foo</code> is undefined.</p>\n<p>Thoughts?</p>",
        "id": 449468962,
        "sender_full_name": "RGBCube",
        "timestamp": 1720259820
    },
    {
        "content": "<p>I think I'll keep the normal if else then right now. Have some doubts about precendence and the general ergonomics of it</p>",
        "id": 449710074,
        "sender_full_name": "RGBCube",
        "timestamp": 1720381783
    },
    {
        "content": "<p>But I'll definitely look into it later when more stuff is done</p>",
        "id": 449710086,
        "sender_full_name": "RGBCube",
        "timestamp": 1720381798
    },
    {
        "content": "<p>I was thinking about this a bit yesterday. FWIW, I think its a fairly nice idea. It's basically the \"ternary\" operation from other languages at that point, which I am fond of.</p>",
        "id": 449711474,
        "sender_full_name": "Tim DeHerrera",
        "timestamp": 1720382212
    },
    {
        "content": "<p>It is exactly like ? and :, but each operator is seperate</p>",
        "id": 449713155,
        "sender_full_name": "RGBCube",
        "timestamp": 1720382702
    },
    {
        "content": "<p>However this might require you to put () everywhere, which I'm not fond of. I'll look at some snippets inside nixpkgs lib and rewrite them to use this, seeing how it works</p>",
        "id": 449713285,
        "sender_full_name": "RGBCube",
        "timestamp": 1720382737
    }
]